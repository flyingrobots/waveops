plan: waveops-v1
tz: UTC  
waves:
  - number: 1
    teams:
      alpha:
        - { id: W1.T001, issue: 1, effort: 5 }
        - { id: W1.T002, issue: 2, effort: 3 }
      beta:
        - { id: W1.T003, issue: 3, effort: 4 }
        - { id: W1.T004, issue: 4, effort: 3 }
  - number: 2
    teams:
      alpha:
        - { id: W2.T001, issue: 21, effort: 4 }
        - { id: W2.T002, issue: 22, effort: 3 }
      beta:
        - { id: W2.T003, issue: 23, effort: 5 }
        - { id: W2.T004, issue: 24, effort: 2 }
tasks:
  - id: W1.T001
    title: Project Setup - Initialize TypeScript project with dependencies
    wave: 1
    team: alpha
    depends_on: []
    acceptance:
      - npm run build succeeds
      - npm run test runs (even with placeholder tests)
      - npm run lint passes
      - All dependencies resolve correctly
    critical: true
  - id: W1.T002
    title: Schema Implementation - JSON Schema validation for configuration files  
    wave: 1
    team: alpha
    depends_on: [W1.T001]
    acceptance:
      - All schema files validate sample data from plan-spec.md
      - TypeScript types compile without errors
      - Invalid YAML produces helpful error messages
    critical: true
  - id: W1.T003
    title: Core Data Models - Wave and Team state management
    wave: 1
    team: beta
    depends_on: [W1.T002]
    acceptance:
      - State transitions are atomic and validated
      - JSON serialization is deterministic
      - HTML guard extraction works reliably
    critical: true
  - id: W1.T004
    title: GitHub Integration Foundation - Octokit client and webhook handling
    wave: 1
    team: beta
    depends_on: [W1.T001, W1.T002]
    acceptance:
      - GitHub App permissions validated programmatically
      - Webhook events parsed and routed correctly
      - Rate limiting prevents API abuse
    critical: true
  - id: W2.T001
    title: Command Parser - Slash command parsing and authorization
    wave: 2
    team: alpha
    depends_on: [W1.T003, W1.T004]
    acceptance:
      - All specified commands parse correctly
      - Team authorization works with teams.yaml
      - Command parsing is resilient to formatting variations
    critical: true
  - id: W2.T002
    title: Validation Engine - Task completion validation logic
    wave: 2
    team: alpha
    depends_on: [W1.T004]
    acceptance:
      - Validates issue closed by merged PR correctly
      - Required CI checks validation works
      - Clear error messages with links to failures
    critical: true
  - id: W2.T003
    title: Deployments Gate System - GitHub Deployments for readiness tracking
    wave: 2
    team: beta
    depends_on: [W2.T002]
    acceptance:
      - Deployments created with correct environment names
      - Status accurately reflects validation results
      - Latest deployment status used for gate decisions
    critical: true
  - id: W2.T004
    title: Wave Gate Check System - GitHub Check Run for wave completion
    wave: 2
    team: beta
    depends_on: [W1.T003, W2.T003]
    acceptance:
      - All-teams-ready logic works correctly
      - No double announcements under race conditions
      - Check-run visible and functional in GitHub UI
    critical: true